# Piper provided environment variables are mentioned here for reference
#   deploy_host
#   deploy_environment
#   deploy_version
#   username
#   password
- hosts:
    - "{{ deploy_host }}"
  vars:
    artifactory_path: https://artifactory.trusted.visa.com/vdc-prod-release
    package_name: datahub
    download_url: "{{ artifactory_path }}/{{ package_name }}/{{ package_name }}-{{ deploy_version}}.tar"
    frontend_env_download_url: "{{ artifactory_path }}/{{ package_name }}/env/occ/datahub-frontend.env"
    gms_env_download_url: "{{ artifactory_path }}/{{ package_name }}/env/occ/datahub-gms.env"
    upgrade_env_download_url: "{{ artifactory_path }}/{{ package_name }}/env/occ/datahub-upgrade.env"
    elasticsearch_env_download_url: "{{ artifactory_path }}/{{ package_name }}/env/occ/elasticsearch-setup.env"
    kafka_env_download_url: "{{ artifactory_path }}/{{ package_name }}/env/occ/kafka-setup.env"
    mysql_env_download_url: "{{ artifactory_path }}/{{ package_name }}/env/occ/mysql-setup.env"
    folder: "/datahub/{{ package_name }}-{{ deploy_version}}"
    date: "{{ lookup('pipe', 'date +%Y%m%d-%H%M') }}"
  gather_facts: no
  tasks:
    - name: download package  "{{ download_url }}"
      get_url:
        url: "{{ download_url }}"
        dest: "{{ folder }}.tar"
        validate_certs: no
        username: "{{ username }}"
        password: "{{ password }}"
      register: download_package
    - debug: msg="{{ download_package }}"
    - name: Kill previous running version
      shell: "echo \"TODO: Kill the process"
    - name: extract tar
      shell: "mkdir -p {{ folder }} && tar -xvf {{ folder }}.tar -C {{ folder }}"
    - name: download package  "{{ frontend_env_download_url }}"
      get_url:
        url: "{{ download_url }}"
        dest: "{{ folder }}/datahub-frontend/env"
        validate_certs: no
        username: "{{ username }}"
        password: "{{ password }}"
      register: download_package_frontend
    - debug: msg="{{ download_package_frontend }}"
    - name: download package  "{{ gms_env_download_url }}"
      get_url:
        url: "{{ download_url }}"
        dest: "{{ folder }}/datahub-gms/env"
        validate_certs: no
        username: "{{ username }}"
        password: "{{ password }}"
      register: download_package_gms
    - debug: msg="{{ download_package_gms }}"
    - name: download package  "{{ upgrade_env_download_url }}"
      get_url:
        url: "{{ download_url }}"
        dest: "{{ folder }}/datahub-upgrade/env"
        validate_certs: no
        username: "{{ username }}"
        password: "{{ password }}"
      register: download_package_upgrade
    - debug: msg="{{ download_package_upgrade }}"
    - name: download package  "{{ elasticsearch_env_download_url }}"
      get_url:
        url: "{{ download_url }}"
        dest: "{{ folder }}/setup/elasticsearch-elasticsearch/env"
        validate_certs: no
        username: "{{ username }}"
        password: "{{ password }}"
      register: download_package_elasticsearch
    - debug: msg="{{ download_package_elasticsearch }}"
    - name: download package  "{{ kafka_env_download_url }}"
      get_url:
        url: "{{ download_url }}"
        dest: "{{ folder }}/setup/kafka-setup/env"
        validate_certs: no
        username: "{{ username }}"
        password: "{{ password }}"
      register: download_package_kafka
    - debug: msg="{{ download_package_kafka }}"
    - name: download package  "{{ mysql_env_download_url }}"
      get_url:
        url: "{{ download_url }}"
        dest: "{{ folder }}/setup/mysql-setup/env"
        validate_certs: no
        username: "{{ username }}"
        password: "{{ password }}"
      register: download_package_mysql
    - debug: msg="{{ download_package_mysql }}"
    - name: check download
      shell: "ls -R {{ folder }}"


# TODO:
#  1. Download tar files -- Done
#  2. Extract tar file -- Done
#  3. Point latest symlink to this folder
#  4. Run mysql, elastic, kafka setup
#  5. Gracefully kill previous process
#  6. Run Datahub Upgrae
#  7. Run Datahub GMS
#  8. Run Frontend
#  9. Retain only last 3 versions
