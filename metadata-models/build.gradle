import io.datahubproject.GenerateJsonSchemaTask


apply plugin: 'pegasus'

tasks.withType(JavaCompile).configureEach {
  javaCompiler = javaToolchains.compilerFor {
    languageVersion = JavaLanguageVersion.of(11)
  }
}
tasks.withType(Test).configureEach {
  javaLauncher = javaToolchains.launcherFor {
    languageVersion = JavaLanguageVersion.of(11)
  }
}

dependencies {
  compile spec.product.pegasus.data
  compile project(':li-utils')
  dataModel project(':li-utils')

  testCompile externalDependency.guava

  constraints {
    implementation('commons-codec:commons-codec:1.15') {
      because("previous versions are vulnerable to CVE-2012-0050")
    }
    implementation('commons-io:commons-io:2.11.0') {
      because("previous versions are vulnerable to CVE-2021-29425")
    }
  }
}

mainAvroSchemaJar.dependsOn generateAvroSchema

pegasus.main.generationModes = [PegasusGenerationMode.PEGASUS, PegasusGenerationMode.AVRO]


tasks.register('generateJsonSchema', GenerateJsonSchemaTask) {
  it.setInputDirectory("$projectDir/src/mainGeneratedAvroSchema")
  it.setOutputDirectory("$projectDir/src/generatedJsonSchema")
  dependsOn generateAvroSchema
}
